{% extends 'templates/app.twig' %}

{% block content %}
<div class="row">
  <div class="col-md-6 offset-md-3">
    <div class="card">
      <div class="card-header">Добавление аккаунта</div>
      <div class="card-body">
        {# <form action="{{ path_for('dashboard.add.account') }}?account={{ account.account }}&id={{ account.id }}" method="post">
          <div class="form-group">
            <label for="login">Имя пользователя</label>
            <input type="text" name="login" id="login" placeholder=""
              class="form-control {{ errors.login ? 'is-invalid' : '' }}">
            {% if errors.login %}
            <span class="invalid-feedback">{{ errors.login | first }}</span>
            {% endif %}
          </div>
          <div class="form-group">
            <button class="btn btn-outline-primary">Добавить</button>
          </div>
          {{ csrf.field | raw }}
        </form> #}
        <form id="addAccount">
          <div class="form-group">
            <label for="login">Имя пользователя</label>
            <input type="text" name="login" id="login" placeholder=""
              class="form-control {{ errors.login ? 'is-invalid' : '' }}">
            {% if errors.login %}
            <span class="invalid-feedback">{{ errors.login | first }}</span>
            {% endif %}
          </div>
          <div class="form-group">
            <button class="btn btn-outline-primary">Добавить</button>
          </div>
          {{ csrf.field | raw }}
        </form>
      </div>
    </div>
  </div>
</div>
<script>
  document.getElementById('addAccount').addEventListener('submit', addAccount);

  function addAccount(e) {
    e.preventDefault();

    var params = window
      .location
      .search
      .replace('?', '')
      .split('&')
      .reduce(
        function (p, e) {
          var a = e.split('=');
          p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);
          return p;
        },
        {}
      );

    var request = {
      login: document.querySelector('input[name="login"]').value,
      account: params['account'],
      id: params['id'],
      csrf_name: document.querySelector('input[name="csrf_name"]').value,
      csrf_value: document.querySelector('input[name="csrf_value"]').value,
    }

    request = JSON.stringify(request);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', document.location.href, true);
    xhr.setRequestHeader('Content-Type', 'application/json, application/x-www-form-urlencoded; charset=utf-8');
    xhr.onload = function () {
      var response = this.responseText;
      console.log(response);
      if (this.status === 200 && response === 'ok') {
        div.remove();
        location.href = "https://oauth.yandex.ru/authorize?response_type=token&client_id=e38428b0273d4f06a2ea58c0b672f600&redirect_uri=http://localhost:8000/public/dashboard/add/&login_hint=" + JSON.parse(request).login;
      } else {
        //document.location.reload();
      }
    }
    console.log(request);
    xhr.send(request);

    var div = document.createElement('div');
    div.className = "spinner-border";
    div.setAttribute('role', 'status');
    div.innerHTML = '<span class="sr-only">Loading...</span>';
    document.getElementsByClassName('form-group')[1].appendChild(div);
  }
  //////////////////////////////////////////////



  if (document.location.hash != '') {

    var hash = document.location.hash;

    if (hash.indexOf('access_token=') != -1) {
      var token = /access_token=([^&]+)/.exec(hash)[1];
      var expires = /expires_in=([^&]+)/.exec(hash)[1];

      var xhr = new XMLHttpRequest();

      var url = document.location.origin + document.location.pathname + "?access_token=" + token + "&expires_in=" + expires;
      xhr.open('GET', url, false);
      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
      xhr.onload = function(){
        console.log(this.responseText);
        if (this.status === 200 && this.responseText === 'success') {
          document.location.href = document.location.origin + "/public/dashboard/";
        }
      };
      xhr.send();

      //var a = document.location.hash;
      //a = a.slice(1).split("&");
      //a = JSON.stringify(a);
    }


    /*
    // 4. Если код ответа сервера не 200, то это ошибка
    if (xhr.status != 200) {
      // обработать ошибку
      alert(xhr.status + ': ' + xhr.statusText); // пример вывода: 404: Not Found
    } else {
      // вывести результат
      alert(xhr.responseText); // responseText -- текст ответа.
    }
    */

  }
</script>
{% endblock %}